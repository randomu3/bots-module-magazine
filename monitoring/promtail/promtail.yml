server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Backend application logs
  - job_name: backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend
          service: telegram-bot-platform
          environment: production
          __path__: /var/log/backend/*.log

  # Frontend application logs
  - job_name: frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: frontend
          service: telegram-bot-platform
          environment: production
          __path__: /var/log/frontend/*.log

  # Nginx logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: telegram-bot-platform
          environment: production
          __path__: /var/log/nginx/*.log

  # PostgreSQL logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: telegram-bot-platform
          environment: production
          __path__: /var/log/postgresql/*.log

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: telegram-bot-platform
          environment: production
          __path__: /var/log/redis/*.log

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'

  # System logs via journald
  - job_name: journal
    journal:
      max_age: 12h
      labels:
        job: systemd-journal
        service: telegram-bot-platform
        environment: production
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
      - source_labels: ['__journal__hostname']
        target_label: 'hostname'
      - source_labels: ['__journal_priority_keyword']
        target_label: 'level'

pipeline_stages:
  # Parse JSON logs
  - json:
      expressions:
        timestamp: timestamp
        level: level
        message: message
        service: service
        userId: userId
        requestId: requestId

  # Extract timestamp
  - timestamp:
      source: timestamp
      format: RFC3339Nano

  # Add labels based on log content
  - labels:
      level:
      service:
      userId:
      requestId:

  # Drop debug logs in production
  - drop:
      expression: '.*level="debug".*'
      older_than: 24h

  # Multiline support for stack traces
  - multiline:
      firstline: '^\d{4}-\d{2}-\d{2}'
      max_wait_time: 3s